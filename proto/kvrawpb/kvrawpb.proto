syntax = "proto3";
package kvrawpb;


import "errorpb.proto";

message KvPair {
    bytes key = 2;
    bytes value = 3;
}

message RawScanRequest {
    bytes start_key = 2;
    uint32 limit = 3;
    bool key_only = 4;
    string cf = 5;
    bool reverse = 6;
    // For compatibility, when scanning forward, the range to scan is [start_key, end_key), where start_key < end_key;
    // and when scanning backward, it scans [end_key, start_key) in descending order, where end_key < start_key.
    bytes end_key = 7;
}

message RawScanResponse {
    errorpb.Error region_error = 1;
    repeated KvPair kvs = 2;
}

message RawGetRequest {
    bytes key = 2;
    string cf = 3;
}

message RawGetResponse {
    errorpb.Error region_error = 1;
    string error = 2;
    bytes value = 3;
    bool not_found = 4;
}

message RawPutRequest {
    bytes key = 2;
    bytes value = 3;
    string cf = 4;
}

message RawPutResponse {
    errorpb.Error region_error = 1;
    string error = 2;
}

message RawDeleteRequest {
    bytes key = 2;
    string cf = 3;
}

message RawDeleteResponse {
    errorpb.Error region_error = 1;
    string error = 2;
}


// Serve as a distributed kv database.
service Tikv {

    // RawKV commands.
    rpc RawGet(kvrawpb.RawGetRequest) returns (kvrawpb.RawGetResponse) {}
    rpc RawPut(kvrawpb.RawPutRequest) returns (kvrawpb.RawPutResponse) {}
    rpc RawDelete(kvrawpb.RawDeleteRequest) returns (kvrawpb.RawDeleteResponse) {}
    rpc RawScan(kvrawpb.RawScanRequest) returns (kvrawpb.RawScanResponse) {}
}
